name: CI

on:
  push:
    branches: ["**"]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential clang-format libfmt-dev libgtest-dev libbenchmark-dev lcov libboost-dev
      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install cmake fmt googletest boost clang-format
      - name: Configure (Linux)
        if: runner.os == 'Linux'
        run: cmake -S . -B build -DENABLE_COVERAGE=ON
      - name: Configure (macOS)
        if: runner.os == 'macOS'
        run: cmake -S . -B build -DBUILD_BENCHMARK=OFF
      - name: Build
        run: cmake --build build --config Debug
      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure
      - name: Generate coverage
        if: runner.os == 'Linux'
        run: |
          lcov --capture --directory build --output-file coverage.info --ignore-errors mismatch
          lcov --remove coverage.info '/usr/*' '*/tests/*' --output-file coverage.info
          lcov --list coverage.info
      - name: Check code format
        run: |
          FILES=$(git ls-files '*.cpp' '*.hpp' '*.h')
          if [ -n "$FILES" ]; then
            clang-format -i --style=file $FILES
            git diff --exit-code
          fi

